library(pacman)
pacman::p_load (data.table, dplyr, plotrix, ggplot2, parallel, ggpubr, scales, ggh4x, lemon, tidyverse)
# Analysis setup ----
TablePaths <- c(
"/Volumes/TAYLOR-LAB/Synthetic Myddosome Paper/1_Image analysis/8_247_MyD88-GFP-synTRAF6-BD-1x TRAF6/20221129 4nM_cl247_TRAF6_MyD88-GFP-synTRAF6-BD-1x 001/Essential.csv.gz",
"/Volumes/TAYLOR-LAB/Synthetic Myddosome Paper/1_Image analysis/8_247_MyD88-GFP-synTRAF6-BD-1x TRAF6/20221207 4nM_cl247_TRAF6_MyD88-GFP-synTRAF6-BD-1x 002/Essential.csv.gz",
"/Volumes/TAYLOR-LAB/Synthetic Myddosome Paper/1_Image analysis/8_247_MyD88-GFP-synTRAF6-BD-1x TRAF6/20221207 4nM_cl247_TRAF6_MyD88-GFP-synTRAF6-BD-1x 006/Essential.csv.gz",
"/Volumes/TAYLOR-LAB/Synthetic Myddosome Paper/1_Image analysis/8_247_MyD88-GFP-synTRAF6-BD-1x TRAF6/20230317 1.5nM_cl247_TRAF6_MyD88-GFP-synTRAF6-BD-1x 001/Essential.csv.gz",
"/Volumes/TAYLOR-LAB/Synthetic Myddosome Paper/1_Image analysis/9_255_MyD88-GFP-synTRAF6-BD-3x TRAF6/20221123 4nM_cl255_TRAF6_MyD88-GFP-synTRAF6-BD-3x 001/Essential.csv.gz",
"/Volumes/TAYLOR-LAB/Synthetic Myddosome Paper/1_Image analysis/9_255_MyD88-GFP-synTRAF6-BD-3x TRAF6/20221207 4nM_cl255_TRAF6_MyD88-GFP-synTRAF6-BD-3x 001/Essential.csv.gz",
"/Volumes/TAYLOR-LAB/Synthetic Myddosome Paper/1_Image analysis/9_255_MyD88-GFP-synTRAF6-BD-3x TRAF6/20230309 1.5nM_cl255_TRAF6_MyD88-GFP-synTRAF6-BD-3x 001/Essential.csv.gz",
#"/Volumes/taylor-lab/Synthetic Myddosome Paper/1_Image analysis/9_255_MyD88-GFP-synTRAF6-BD-3x TRAF6/20240307 3nM_cl255_MyD88_TRAF6_3x 001/Essential.csv.gz",
#"/Volumes/taylor-lab/Synthetic Myddosome Paper/1_Image analysis/9_255_MyD88-GFP-synTRAF6-BD-3x TRAF6/20240307 3nM_cl255_MyD88_TRAF6_3x 002/Essential.csv.gz",
#"/Volumes/taylor-lab/Synthetic Myddosome Paper/1_Image analysis/9_255_MyD88-GFP-synTRAF6-BD-3x TRAF6/20240307 3nM_cl255_MyD88_TRAF6_3x 003/Essential.csv.gz",
"/Volumes/TAYLOR-LAB/Synthetic Myddosome Paper/1_Image analysis/10_263_MyD88-GFP-synTRAF6-BD-5x TRAF6/20221123 4nM_cl263_TRAF6_MyD88-GFP-synTRAF6-BD-5x 001/Essential.csv.gz",
"/Volumes/TAYLOR-LAB/Synthetic Myddosome Paper/1_Image analysis/10_263_MyD88-GFP-synTRAF6-BD-5x TRAF6/20221207 4nM_cl263_TRAF6_MyD88-GFP-synTRAF6-BD-5x 001/Essential.csv.gz",
"/Volumes/TAYLOR-LAB/Synthetic Myddosome Paper/1_Image analysis/10_263_MyD88-GFP-synTRAF6-BD-5x TRAF6/20230309 1.5nM_cl263_TRAF6_MyD88-GFP-synTRAF6-BD-5x 003/Essential.csv.gz",
"/Volumes/TAYLOR-LAB/Synthetic Myddosome Paper/1_Image analysis/10_263_MyD88-GFP-synTRAF6-BD-5x TRAF6/20230317 1.5nM_cl263_TRAF6_MyD88-GFP-synTRAF6-BD-5x 001/Essential.csv.gz"
)
Table <- lapply(TablePaths, fread)
Table <- rbindlist(Table, fill = FALSE)
#fill = FALSE --> if there are any mismatches in the column names or orders, the function will throw an error instead of attempting to fill missing values with NA
Table$COHORT <- factor(Table$COHORT, levels = c("MyD88-GFP-synTRAF6-BD-1x TRAF6", "MyD88-GFP-synTRAF6-BD-3x TRAF6", "MyD88-GFP-synTRAF6-BD-5x TRAF6"))
# Select columns for analysis
Table1 <- Table %>%
select(PROTEIN,COHORT,IMAGE,CELL,UNIVERSAL_TRACK_ID,TIME,TIME_ADJUSTED,FRAME,FRAMES_ADJUSTED,FRAMES_SINCE_LANDING,LIFETIME,
NORMALIZED_INTENSITY,MAX_NORMALIZED_INTENSITY,STARTING_NORMALIZED_INTENSITY,COMPLEMENTARY_PROTEIN_1,COMPLEMENTARY_NORMALIZED_INTENSITY_1) %>%
arrange(UNIVERSAL_TRACK_ID) %>%
as.data.table()
library(pacman)
pacman::p_load (data.table, dplyr, plotrix, ggplot2, parallel, ggpubr, scales, tidyr, R.utils)
# SETTINGS
save   <- TRUE
figure <- "Figure S11/S11C/"
source("/Users/u_cao/Desktop/image-analysis_2022-09_FakunCustomize/Release on Github/Analysis-CHARMS/functions.R")
NAME_KEY <- fread("/Users/u_cao/Desktop/image-analysis_2022-09_FakunCustomize/Release on Github/Analysis-CHARMS/Figure S11/Figure_S11C_KEY.csv", header = T) %>% select(CL_NAME_ON_PLOT, COHORT, PLOTTING_COLOR, PLT_LIGHTER, PLT_LIGHTEST)
ORDER_NO <- fread("/Users/u_cao/Desktop/image-analysis_2022-09_FakunCustomize/Release on Github/Analysis-CHARMS/Figure S11/Figure_S11C_KEY.csv", header = T) %>% select(CL_NAME_ON_PLOT, COHORT, ORDER_NO)
main <- Table1 # sourced from T6BM1x3x5x_0_Setup.R
LOW_CAT     <- "0 s"
MEDIUM_CAT  <- "4-40 s"
HIGH_CAT    <- "≥ 40 s"
# Table for the Dwell Time
# Clean up table, and Measure dwell frames/time of CHARMS associated TRAF6 ----
Cell_Summary <- main %>%
# Step 1: Filter out the noise
filter(PROTEIN == "MyD88", MAX_NORMALIZED_INTENSITY >= 1) %>%
# Step 2: Group the data by 'UNIVERSAL_TRACK_ID'
group_by(UNIVERSAL_TRACK_ID) %>%
# Step 3: Filter tracks with at least three time points based on 'FRAMES_ADJUSTED'
filter(max(FRAMES_ADJUSTED) >= 2) %>%
# Step 4: Calculate colocalization and create a streak identifier ('TRAF6_Streak')
mutate(COLOCALIZATION = COMPLEMENTARY_NORMALIZED_INTENSITY_1 >= 1) %>%
mutate(TRAF6_Streak = cumsum(!COLOCALIZATION)) %>%
# Step 5: Filter rows with colocalization events
filter(COLOCALIZATION == 1) %>%
# Step 6: Group by multiple variables for further summarization
group_by(COHORT, IMAGE, CELL, UNIVERSAL_TRACK_ID, TRAF6_Streak) %>%
# Step 7: Summarize the colocalization events
summarise(DWELL_FRAMES = sum(COLOCALIZATION), # Number of frames that complementary protein is above threshold in a continuous stretch
DWELL_TIME = (sum(COLOCALIZATION) - 1) * 4) %>%
# Step 8: Categorize dwell times
mutate(CATEGORY_DWELL_TIME = fcase(DWELL_TIME ==  0, LOW_CAT,
DWELL_TIME <  40 & DWELL_TIME != 0, MEDIUM_CAT,
DWELL_TIME >= 40, HIGH_CAT)) %>%
# Step 9: Convert the result to a data.table
as.data.table()
Cell_Summary$CATEGORY_DWELL_TIME <- factor(Cell_Summary$CATEGORY_DWELL_TIME, levels = c(LOW_CAT, MEDIUM_CAT, HIGH_CAT))
Mean_LT <- Cell_Summary %>%
filter(!is.na(COHORT)) %>%
group_by(COHORT) %>%
summarise(LT_TRAF6 = mean(DWELL_TIME),
SEM_LT_TRAF6 = sem(DWELL_TIME)) %>%
left_join(NAME_KEY)
View(Mean_LT)
Mean_Total <- Cell_Summary %>%
filter(!is.na(COHORT)) %>%
group_by(COHORT, CATEGORY_DWELL_TIME) %>%
count(CATEGORY_DWELL_TIME, COHORT, name = "N_CATEGORY_DWELL_TIME", .drop = FALSE) %>%
group_by(COHORT) %>%
mutate(PCT_RECRUITMENT = N_CATEGORY_DWELL_TIME/sum(N_CATEGORY_DWELL_TIME)) %>%
group_by(COHORT, CATEGORY_DWELL_TIME) %>%
summarise(PCT_RECRUITMENT = mean(PCT_RECRUITMENT)) %>%
as.data.table() %>%
left_join(NAME_KEY) %>%
unique()
View(Mean_Total)
Mean_Total <- Cell_Summary %>%
group_by(COHORT, CATEGORY_DWELL_TIME) %>%
count(CATEGORY_DWELL_TIME, COHORT, name = "N_CATEGORY_DWELL_TIME", .drop = FALSE) %>%
group_by(COHORT) %>%
mutate(PCT_RECRUITMENT = N_CATEGORY_DWELL_TIME/sum(N_CATEGORY_DWELL_TIME)) %>%
group_by(COHORT, CATEGORY_DWELL_TIME) %>%
summarise(PCT_RECRUITMENT = mean(PCT_RECRUITMENT)) %>%
as.data.table() %>%
left_join(NAME_KEY) %>%
unique()
View(/Volumes/taylor-lab/Synthetic Myddosome Paper/6_Manuscript/Source files/Figure S11/S11C_T6-LT_CHARMS-1x-3x-5xT6BM/Cell_Summary.csv.gz)
a <- fread ("/Volumes/taylor-lab/Synthetic Myddosome Paper/6_Manuscript/Source files/Figure S11/S11C_T6-LT_CHARMS-1x-3x-5xT6BM/Cell_Summary.csv.gz")
View(a)
View(Cell_Summary)
# Table for the Dwell Time
# Clean up table, and Measure dwell frames/time of CHARMS associated TRAF6 ----
b <- a %>%
# Step 1: Filter out the noise
filter(PROTEIN == "MyD88", MAX_NORMALIZED_INTENSITY >= 1) %>%
# Step 2: Group the data by 'UNIVERSAL_TRACK_ID'
group_by(UNIVERSAL_TRACK_ID) %>%
# Step 3: Filter tracks with at least three time points based on 'FRAMES_ADJUSTED'
filter(max(FRAMES_ADJUSTED) >= 2) %>%
# Step 4: Calculate colocalization and create a streak identifier ('TRAF6_Streak')
mutate(COLOCALIZATION = COMPLEMENTARY_NORMALIZED_INTENSITY_1 >= 1) %>%
mutate(TRAF6_Streak = cumsum(!COLOCALIZATION)) %>%
# Step 5: Filter rows with colocalization events
filter(COLOCALIZATION == 1) %>%
# Step 6: Group by multiple variables for further summarization
group_by(COHORT, IMAGE, CELL, UNIVERSAL_TRACK_ID, TRAF6_Streak) %>%
# Step 7: Summarize the colocalization events
summarise(DWELL_FRAMES = sum(COLOCALIZATION), # Number of frames that complementary protein is above threshold in a continuous stretch
DWELL_TIME = (sum(COLOCALIZATION) - 1) * 4) %>%
# Step 8: Categorize dwell times
mutate(CATEGORY_DWELL_TIME = fcase(DWELL_TIME ==  0, LOW_CAT,
DWELL_TIME <  40 & DWELL_TIME != 0, MEDIUM_CAT,
DWELL_TIME >= 40, HIGH_CAT)) %>%
# Step 9: Convert the result to a data.table
as.data.table()
b$CATEGORY_DWELL_TIME <- factor(Cell_Summary$CATEGORY_DWELL_TIME, levels = c(LOW_CAT, MEDIUM_CAT, HIGH_CAT))
# Table for the Dwell Time
# Clean up table, and Measure dwell frames/time of CHARMS associated TRAF6 ----
b <- a %>%
# Step 1: Filter out the noise
filter(PROTEIN == "MyD88", MAX_NORMALIZED_INTENSITY >= 1) %>%
# Step 2: Group the data by 'UNIVERSAL_TRACK_ID'
group_by(UNIVERSAL_TRACK_ID) %>%
# Step 3: Filter tracks with at least three time points based on 'FRAMES_ADJUSTED'
filter(max(FRAMES_ADJUSTED) >= 2) %>%
# Step 4: Calculate colocalization and create a streak identifier ('TRAF6_Streak')
mutate(COLOCALIZATION = COMPLEMENTARY_NORMALIZED_INTENSITY_1 >= 1) %>%
mutate(TRAF6_Streak = cumsum(!COLOCALIZATION)) %>%
# Step 5: Filter rows with colocalization events
filter(COLOCALIZATION == 1) %>%
# Step 6: Group by multiple variables for further summarization
group_by(COHORT, IMAGE, CELL, UNIVERSAL_TRACK_ID, TRAF6_Streak) %>%
# Step 7: Summarize the colocalization events
summarise(DWELL_FRAMES = sum(COLOCALIZATION), # Number of frames that complementary protein is above threshold in a continuous stretch
DWELL_TIME = (sum(COLOCALIZATION) - 1) * 4) %>%
# Step 8: Categorize dwell times
mutate(CATEGORY_DWELL_TIME = fcase(DWELL_TIME ==  0, LOW_CAT,
DWELL_TIME <  40 & DWELL_TIME != 0, MEDIUM_CAT,
DWELL_TIME >= 40, HIGH_CAT)) %>%
# Step 9: Convert the result to a data.table
as.data.table()
LOW_CAT     <- "0 s"
MEDIUM_CAT  <- "4-40 s"
HIGH_CAT    <- "≥ 40 s"
b <- a
# Table for the Dwell Time
# Clean up table, and Measure dwell frames/time of CHARMS associated TRAF6 ----
b <- a %>%
# Step 1: Filter out the noise
filter(PROTEIN == "MyD88", MAX_NORMALIZED_INTENSITY >= 1) %>%
# Step 2: Group the data by 'UNIVERSAL_TRACK_ID'
group_by(UNIVERSAL_TRACK_ID) %>%
# Step 3: Filter tracks with at least three time points based on 'FRAMES_ADJUSTED'
filter(max(FRAMES_ADJUSTED) >= 2) %>%
# Step 4: Calculate colocalization and create a streak identifier ('TRAF6_Streak')
mutate(COLOCALIZATION = COMPLEMENTARY_NORMALIZED_INTENSITY_1 >= 1) %>%
mutate(TRAF6_Streak = cumsum(!COLOCALIZATION)) %>%
# Step 5: Filter rows with colocalization events
filter(COLOCALIZATION == 1) %>%
# Step 6: Group by multiple variables for further summarization
group_by(COHORT, IMAGE, CELL, UNIVERSAL_TRACK_ID, TRAF6_Streak) %>%
# Step 7: Summarize the colocalization events
summarise(DWELL_FRAMES = sum(COLOCALIZATION), # Number of frames that complementary protein is above threshold in a continuous stretch
DWELL_TIME = (sum(COLOCALIZATION) - 1) * 4) %>%
# Step 8: Categorize dwell times
mutate(CATEGORY_DWELL_TIME = fcase(DWELL_TIME ==  0, LOW_CAT,
DWELL_TIME <  40 & DWELL_TIME != 0, MEDIUM_CAT,
DWELL_TIME >= 40, HIGH_CAT)) %>%
# Step 9: Convert the result to a data.table
as.data.table()
Mean_LT <- a %>%
filter(!is.na(COHORT)) %>%
group_by(COHORT) %>%
summarise(LT_TRAF6 = mean(DWELL_TIME),
SEM_LT_TRAF6 = sem(DWELL_TIME)) %>%
left_join(NAME_KEY)
Mean_Total <- a %>%
filter(!is.na(COHORT)) %>%
group_by(COHORT, CATEGORY_DWELL_TIME) %>%
count(CATEGORY_DWELL_TIME, COHORT, name = "N_CATEGORY_DWELL_TIME", .drop = FALSE) %>%
group_by(COHORT) %>%
mutate(PCT_RECRUITMENT = N_CATEGORY_DWELL_TIME/sum(N_CATEGORY_DWELL_TIME)) %>%
group_by(COHORT, CATEGORY_DWELL_TIME) %>%
summarise(PCT_RECRUITMENT = mean(PCT_RECRUITMENT)) %>%
as.data.table() %>%
left_join(NAME_KEY) %>%
unique()
Mean_LT <- a %>%
filter(!is.na(COHORT)) %>%
group_by(COHORT) %>%
summarise(LT_TRAF6 = mean(DWELL_TIME),
SEM_LT_TRAF6 = sem(DWELL_TIME)) %>%
left_join(NAME_KEY)
Cell_Summary <- a
Cell_Summary$CATEGORY_DWELL_TIME <- factor(Cell_Summary$CATEGORY_DWELL_TIME, levels = c(LOW_CAT, MEDIUM_CAT, HIGH_CAT))
Mean_LT <- Cell_Summary %>%
group_by(COHORT) %>%
summarise(LT_TRAF6 = mean(DWELL_TIME),
SEM_LT_TRAF6 = sem(DWELL_TIME)) %>%
left_join(NAME_KEY)
View(Mean_LT)
Mean_Total <- Cell_Summary %>%
group_by(COHORT, CATEGORY_DWELL_TIME) %>%
count(CATEGORY_DWELL_TIME, COHORT, name = "N_CATEGORY_DWELL_TIME", .drop = FALSE) %>%
group_by(COHORT) %>%
mutate(PCT_RECRUITMENT = N_CATEGORY_DWELL_TIME/sum(N_CATEGORY_DWELL_TIME)) %>%
group_by(COHORT, CATEGORY_DWELL_TIME) %>%
summarise(PCT_RECRUITMENT = mean(PCT_RECRUITMENT)) %>%
as.data.table() %>%
left_join(NAME_KEY) %>%
unique()
View(Mean_Total)
